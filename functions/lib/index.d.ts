import * as functions from "firebase-functions";
export declare const uploadTemplateAndParse: functions.HttpsFunction & functions.Runnable<any>;
export declare const processUploadedTemplate: functions.HttpsFunction & functions.Runnable<any>;
export declare const createServiceRequest: functions.HttpsFunction & functions.Runnable<any>;
export declare const updateServiceRequest: functions.HttpsFunction & functions.Runnable<any>;
export declare const deleteServiceRequest: functions.HttpsFunction & functions.Runnable<any>;
export declare const generateIntakeLink: functions.HttpsFunction & functions.Runnable<any>;
export declare const generateIntakeLinkWithOverrides: functions.HttpsFunction & functions.Runnable<any>;
export declare const getIntakeFormSchema: functions.HttpsFunction & functions.Runnable<any>;
export declare const submitIntakeForm: functions.HttpsFunction & functions.Runnable<any>;
export declare const approveIntakeForm: functions.HttpsFunction & functions.Runnable<any>;
export declare const generateDocumentsFromIntake: functions.HttpsFunction & functions.Runnable<any>;
export declare const getDocumentDownloadUrl: functions.HttpsFunction & functions.Runnable<any>;
export declare const generateDocumentsWithAI: functions.HttpsFunction & functions.Runnable<any>;
export declare const downloadDocument: functions.HttpsFunction;
export declare const intakeFormAPI: functions.HttpsFunction;
export declare const listIntakes: functions.HttpsFunction & functions.Runnable<any>;
export declare const approveCustomization: functions.HttpsFunction & functions.Runnable<any>;
export declare const rejectCustomization: functions.HttpsFunction & functions.Runnable<any>;
export declare const updateTemplateSettings: functions.HttpsFunction & functions.Runnable<any>;
export declare const listTemplates: functions.HttpsFunction & functions.Runnable<any>;
export declare const getTemplateWithPlaceholders: functions.HttpsFunction & functions.Runnable<any>;
export declare const suggestPlaceholdersAI: functions.HttpsFunction & functions.Runnable<any>;
export declare const saveTemplateDraft: functions.HttpsFunction & functions.Runnable<any>;
export declare const approveTemplateVersion: functions.HttpsFunction & functions.Runnable<any>;
export declare const rollbackTemplate: functions.HttpsFunction & functions.Runnable<any>;
export declare const acquireTemplateLock: functions.HttpsFunction & functions.Runnable<any>;
export declare const releaseTemplateLock: functions.HttpsFunction & functions.Runnable<any>;
export declare const refreshTemplateLock: functions.HttpsFunction & functions.Runnable<any>;
export declare const checkTemplateLock: functions.HttpsFunction & functions.Runnable<any>;
export declare const getTemplateVersionHistory: functions.HttpsFunction & functions.Runnable<any>;
export declare const getTemplateAuditTrail: functions.HttpsFunction & functions.Runnable<any>;
export declare const validatePlaceholders: functions.HttpsFunction & functions.Runnable<any>;
export declare const generateCustomClauseAI: functions.HttpsFunction & functions.Runnable<any>;
export declare const createCustomerOverride: functions.HttpsFunction & functions.Runnable<any>;
export declare const validateCustomerOverride: functions.HttpsFunction & functions.Runnable<any>;
export declare const reviewOverride: functions.HttpsFunction & functions.Runnable<any>;
export declare const getOverrides: functions.HttpsFunction & functions.Runnable<any>;
export declare const getEffectiveSchema: functions.HttpsFunction & functions.Runnable<any>;
export declare const freezeIntakeVersion: functions.HttpsFunction & functions.Runnable<any>;
export declare const getOverrideSections: functions.HttpsFunction & functions.Runnable<any>;
export declare const hasPendingOverrides: functions.HttpsFunction & functions.Runnable<any>;
export declare const startIntakeWithOverrides: functions.HttpsFunction & functions.Runnable<any>;
export declare const getIntakeWithOverrides: functions.HttpsFunction & functions.Runnable<any>;
export declare const onTemplateUploaded: functions.CloudFunction<functions.storage.ObjectMetadata>;
export declare const onIntakeStatusChange: functions.CloudFunction<functions.Change<functions.firestore.QueryDocumentSnapshot>>;
//# sourceMappingURL=index.d.ts.map