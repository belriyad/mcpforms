rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isLawyerOrAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['lawyer', 'admin'];
    }
    
    // User profiles - users can read their own, admins can read all
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Templates - users can ONLY access their own templates
    match /templates/{templateId} {
      allow read: if isAuthenticated() && 
                     (resource.data.createdBy == request.auth.uid || isAdmin());
      allow create: if isLawyerOrAdmin() && 
                       request.resource.data.createdBy == request.auth.uid;
      allow update: if isAuthenticated() && 
                       (resource.data.createdBy == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
                       (resource.data.createdBy == request.auth.uid || isAdmin());
    }
    
    // Services - users can ONLY access their own services
    match /services/{serviceId} {
      allow read: if isAuthenticated() && 
                     (resource.data.createdBy == request.auth.uid || isAdmin()) ||
                     // Allow clients to read their service via token (handled in code)
                     resource.data.intakeForm.token != null;
      allow create: if isLawyerOrAdmin() && 
                       request.resource.data.createdBy == request.auth.uid;
      allow update: if isAuthenticated() && 
                       (resource.data.createdBy == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
                       (resource.data.createdBy == request.auth.uid || isAdmin());
    }
    
    // Intake customizations - users can ONLY access their own customizations
    match /intakeCustomizations/{customizationId} {
      allow read: if isAuthenticated() && 
                     (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isLawyerOrAdmin() && 
                       request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
                       (resource.data.userId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
                       (resource.data.userId == request.auth.uid || isAdmin());
    }
    
    // Activity logs - users can ONLY see their own activity logs
    match /activityLogs/{logId} {
      allow read: if isAuthenticated() && 
                     (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAdmin();
    }
    
    // System settings - admin only
    match /settings/{settingId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
